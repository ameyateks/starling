package types

import (
	"math/rand"
	"time"
)

var AccountAndCatUidTestData = AccountAndCategoryUid{
	AccountUid:  "def account id test",
	CategoryUid: "def cat id test",
}

var StarlingSpacesTestData = StarlingSpaces{
	SavingGoals: []StarlingSavingSpace{
		{
			SavingsGoalUid:  "def savings goal uid test",
			Name:            "Saving",
			Target:          SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 8876},
			TotalSaved:      SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 0},
			SavedPercentage: 0,
			SortOrder:       0,
			State:           "Def Spending",
		},
	}, 
	SpendingSpaces: []StarlingSpendingSpace{
		{
			SpaceUid:           "def space uid test",
			Name:               "Luxuries",
			SortOrder:          0,
			State:              "def state test",
			SpendingSpaceType:  "def spending space type test l",
			CardAssociationUid: "def card association uid test",
			Balance: SignedCurrencyAndAmount{
				Currency:   "def currency test",
				MinorUnits: 1234,
			},
		},
		{
			SpaceUid:           "def space uid test",
			Name:               "Investments",
			SortOrder:          0,
			State:              "def state test",
			SpendingSpaceType:  "def spending space type test i",
			CardAssociationUid: "def card association uid test",
			Balance: SignedCurrencyAndAmount{
				Currency:   "def currency test",
				MinorUnits: 10000,
			},
		},
	},
}

var StarlingBalanceTestData = StarlingBalance{
	ClearedBalance:        SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
	EffectiveBalance:      SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
	PendingTransactions:   SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
	AcceptedOverdraft:     SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
	Amount:                SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
	TotalClearedBalance:   SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
	TotalEffectiveBalance: SignedCurrencyAndAmount{Currency: "GBP", MinorUnits: 1234},
}

var SpendingCategories = []string{
	"BIKE", "BILLS_AND_SERVICES", "BUCKET_LIST", "CAR", "CASH", "CELEBRATION", "CHARITY", "CHILDREN", "CLOTHES",
	"COFFEE", "DEBT_REPAYMENT", "DIY", "DRINKS", "EATING_OUT", "EDUCATION", "EMERGENCY", "ENTERTAINMENT",
	"ESSENTIAL_SPEND", "EXPENSES", "FAMILY", "FITNESS", "FUEL", "GAMBLING", "GAMING", "GARDEN", "GENERAL", "GIFTS",
	"GROCERIES", "HOBBY", "HOLIDAYS", "HOME", "IMPULSE_BUY", "INCOME", "INSURANCE", "INVESTMENTS", "LIFESTYLE",
	"MAINTENANCE_AND_REPAIRS", "MEDICAL", "MORTGAGE", "NON_ESSENTIAL_SPEND", "PAYMENTS", "PERSONAL_CARE",
	"PERSONAL_TRANSFERS", "PETS", "PROJECTS", "RELATIONSHIPS", "RENT", "SAVING", "SHOPPING", "SUBSCRIPTIONS",
	"TAKEAWAY", "TAXI", "TRANSPORT", "TREATS", "WEDDING", "WELLBEING", "NONE", "REVENUE", "OTHER_INCOME",
	"CLIENT_REFUNDS", "INVENTORY", "STAFF", "TRAVEL", "WORKPLACE", "REPAIRS_AND_MAINTENANCE", "ADMIN",
	"MARKETING", "BUSINESS_ENTERTAINMENT", "INTEREST_PAYMENTS", "BANK_CHARGES", "OTHER", "FOOD_AND_DRINK",
	"EQUIPMENT", "PROFESSIONAL_SERVICES", "PHONE_AND_INTERNET", "VEHICLES", "DIRECTORS_WAGES", "VAT",
	"CORPORATION_TAX", "SELF_ASSESSMENT_TAX", "INVESTMENT_CAPITAL", "TRANSFERS", "LOAN_PRINCIPAL", "PERSONAL",
	"DIVIDENDS",
}

func GetRdomCategory() string {
	return SpendingCategories[rand.Intn(len(SpendingCategories))]
}

var TransacationTestDataArr = []Transaction{
	{
		FeedItemUid:                   "feed-uid-1",
		CategoryUid:                   "category-uid-1",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1050},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "John Doe",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-2",
		CategoryUid:                   "category-uid-2",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1200},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1200},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Sainsbury's",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-3",
		CategoryUid:                   "category-uid-3",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 40000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 40000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Fancy Place",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-3",
		CategoryUid:                   "category-uid-3",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 100},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 100},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Tfl",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-4",
		CategoryUid:                   "category-uid-4",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Pret A Manger",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-5",
		CategoryUid:                   "category-uid-5",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 753},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 753},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Gail's Bakery",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-6",
		CategoryUid:                   "category-uid-6",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1600},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1600},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Hoppers",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-7",
		CategoryUid:                   "category-uid-7",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 2300},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 2300},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Muji",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-8",
		CategoryUid:                   "category-uid-8",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 6500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 6500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Shell",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-9",
		CategoryUid:                   "category-uid-9",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 100000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 100000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Apple",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-10",
		CategoryUid:                   "category-uid-10",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 2450},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 2450},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Lidl",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-11",
		CategoryUid:                   "category-uid-11",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 450},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 450},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "LinkedIn",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-12",
		CategoryUid:                   "category-uid-12",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1950},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1950},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Rosa's Thai Cafe",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-13",
		CategoryUid:                   "category-uid-13",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 550},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 550},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Shakespeare's Globe",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-14",
		CategoryUid:                   "category-uid-14",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 500000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 500000},
		Direction:                     "IN",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Flyp Homes",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-15",
		CategoryUid:                   "category-uid-15",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 150},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 150},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Primark",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-16",
		CategoryUid:                   "category-uid-16",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 6500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 6500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Nike",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-17",
		CategoryUid:                   "category-uid-17",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 9000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 9000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Adidas",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-20",
		CategoryUid:                   "category-uid-20",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 5500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 5500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "L'oreal",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-21",
		CategoryUid:                   "category-uid-21",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Spotify",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-22",
		CategoryUid:                   "category-uid-22",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 35000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 35000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Louis Vuitton",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-23",
		CategoryUid:                   "category-uid-23",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "YMCA",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-24",
		CategoryUid:                   "category-uid-24",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 4600},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 4600},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Selfridges",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-25",
		CategoryUid:                   "category-uid-25",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 750},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 750},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Amorino Gelato",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-26",
		CategoryUid:                   "category-uid-26",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 900},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 900},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "My Old Dutch Pancake House",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-27",
		CategoryUid:                   "category-uid-27",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 350},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 350},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "McDonald's",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-28",
		CategoryUid:                   "category-uid-28",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 4000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 4000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Curry's PC World",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-29",
		CategoryUid:                   "category-uid-29",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1500},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1500},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Seoul Plaza",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-30",
		CategoryUid:                   "category-uid-30",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 70000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 70000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Sony",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-31",
		CategoryUid:                   "category-uid-31",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 8800},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 8800},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "WHSmith",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-32",
		CategoryUid:                   "category-uid-32",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 7604},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 7604},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Halfords",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-33",
		CategoryUid:                   "category-uid-33",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 900},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 900},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Kleenex",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-34",
		CategoryUid:                   "category-uid-34",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1350},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 1350},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "The Body Shop",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
	{
		FeedItemUid:                   "feed-uid-35",
		CategoryUid:                   "category-uid-35",
		Amount:                        SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 40000},
		SourceAmount:                  SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 40000},
		Direction:                     "OUT",
		UpdatedAt:                     time.Now().Format(time.RFC3339),
		TransactionTime:               time.Now().Format(time.RFC3339),
		SettlementTime:                time.Now().Add(time.Hour).Format(time.RFC3339),
		Source:                        "bank",
		SourceSubType:                 "debit",
		Status:                        "completed",
		TransactingApplicationUserUid: "user-uid-1",
		CounterPartyType:              "individual",
		CounterPartyUid:               "counterparty-uid-1",
		CounterPartyName:              "Council Tax - Westminster City Council",
		ExchangeRate:                  1,
		TotalFees:                     50,
		TotalFeeAmount:                SignedCurrencyAndAmount{Currency: "USD", MinorUnits: 50},
		Reference:                     "ref-1",
		Country:                       "US",
		SpendingCategory:              GetRdomCategory(),
		UserNote:                      "Random test note",
		HasAttachment:                 true,
		HasReceipt:                    true,
	},
}

var TransactionsTestData = Transactions{FeedItems: TransacationTestDataArr}
